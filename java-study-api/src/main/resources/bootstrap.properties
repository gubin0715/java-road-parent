#****************************************
#============== nacos ==================
#****************************************
spring.application.name=java-study-api
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
spring.cloud.nacos.config.server-addr=127.0.0.1:8848
#请求处理的超时时间
ribbon.ReadTimeout:10000
#请求连接的超时时间
ribbon.ConnectTimeout:3000
test_nacos_data=testNacos


#****************************************
#============== druid ===================
#****************************************
# 驱动配置信息
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/java_study_road?characterEncoding=utf-8&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driverClassName=com.mysql.jdbc.Driver
#?初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
#?配置获取连接等待超时的时间
spring.datasource.maxWait=60000
#?配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
#?配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
#?打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
#?配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
#?通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


#****************************************
#============== redis ==================
#****************************************
#单节点
spring.redis.host=127.0.0.1
spring.redis.port=6379
#密码，没有密码可以注释掉
#spring.redis.password = 123456
# 连接池中的最大空闲连接，默认值也是8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接，默认值也是0
spring.redis.lettuce.pool.min-idle=0
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.lettuce.pool.max-active=8 
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出
spring.redis.lettuce.pool.max-wait=-1


#****************************************
#============== RabbitMq ================
#****************************************
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


#****************************************
#============== kafka ===================
#****************************************
kafka.consumer.zookeeper.connect=127.0.0.1:2181
kafka.consumer.servers=127.0.0.1:9092
kafka.consumer.enable.auto.commit=true
kafka.consumer.session.timeout=6000
kafka.consumer.auto.commit.interval=100
kafka.consumer.auto.offset.reset=latest
kafka.consumer.topic=test
kafka.consumer.group.id=test
kafka.consumer.concurrency=10
kafka.producer.servers=127.0.0.1:9092
kafka.producer.retries=0
kafka.producer.batch.size=4096
kafka.producer.linger=1
kafka.producer.buffer.memory=40960



#****************************************
#============== hbase ===================
#****************************************
spring.data.hbase.quorum=localhost:2181
spring.data.hbase.nodeParent=/hbase
spring.data.hbase.rootDir=hdfs://localhost:9000/hbase

